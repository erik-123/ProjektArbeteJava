/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Kommunikationssystem;

import javax.swing.JOptionPane;
import oru.inf.*;

/**
 *
 * @author Haag
 */
public class MainWindow extends javax.swing.JFrame {

    private static InfDB idb;
    private static String id;

    /**
     * Creates new form mainWindow
     */
    public MainWindow(InfDB idb) {
        initComponents();
        this.idb = idb;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldUsername = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        textFieldPassword = new javax.swing.JPasswordField();
        buttonLogin = new javax.swing.JButton();
        btnSkapaKonto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Kommunikationssystem");

        labelName.setText("Användarnamn");

        labelPassword.setText("Lösenord");

        textFieldPassword.setMinimumSize(new java.awt.Dimension(15, 24));

        buttonLogin.setText("Logga in");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLoginActionPerformed(evt);
            }
        });

        btnSkapaKonto.setText("Skapa konto");
        btnSkapaKonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSkapaKontoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPassword)
                            .addComponent(labelName)
                            .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnSkapaKonto)
                        .addGap(18, 18, 18)
                        .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labelName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(textFieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textFieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogin)
                    .addComponent(btnSkapaKonto))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSkapaKontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSkapaKontoActionPerformed
        new SkapaKonto(idb).setVisible(true);
        dispose();

        // TODO add your handling code here:
    }//GEN-LAST:event_btnSkapaKontoActionPerformed

    private void buttonLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLoginActionPerformed

        //Hämtar användarnamn och lösenord som användare matar in.
        String userNameInput = textFieldUsername.getText();
        String passWordInput = textFieldPassword.getText();

        //Kollar så att textfält ifyllt samt att användarnamn är en siffra.
        if (Validation.isNotEmpty(textFieldPassword, textFieldUsername) ) {

            try {
                //Hämtar in anställningsid från databasen.
                String username = idb.fetchSingle("SELECT EMAIL from ANSTALLDA where EMAIL = '" + userNameInput + "'");
                //Hämtar in lösenord från databasen.
                String password = idb.fetchSingle("SELECT LOSENORD from ANSTALLDA where EMAIL = '" + userNameInput + "'");

                String aid = idb.fetchSingle("SELECT AID FROM ANSTALLDA WHERE EMAIL = '" + userNameInput + "'");
                //Hämtar in om användare är admin från databasen.
                String admin = idb.fetchSingle("SELECT RID from Roller_Anstallda where AID = '" + aid + "' AND RID =" + 1);
                //Kollar om användarnamn och lösenord från databasen stämmer överens med det användare matat in SAMT om användare är admin.
                if (userNameInput.equals(username) && passWordInput.equals(password) && admin!=null) {
                    //Sparar användarens ID till ett fält som sedan kan användas av andra klasser för att hitta "ID" på vem som är inloggad.
                    id = aid;
                    setVisible(false);
                    //Öppnar ny admin ruta.
                    AdminVisaInlägg startSidaWindow = new AdminVisaInlägg(idb);
                    startSidaWindow.setVisible(true);
                } // Om användare skriver in rätt användarnamn OCH rätt lösenord.
                else if (userNameInput.equals(username) && passWordInput.equals(password)) {
                    //Sparar användarens ID till ett fält som sedan kan användas av andra klasser för att hitta "ID" på vem som är inloggad.
                    id = aid;
                    setVisible(false);
                    //Öppnar ny (icke-admin) ruta.
                    VisaInlägg startSidaWindow = new VisaInlägg(idb);
                    startSidaWindow.setVisible(true);

                } else {
                    //Om fel användarnamn eller lösenord.
                    JOptionPane.showMessageDialog(null, "Fel lösenord eller användarnamn!");
                }
            } catch (InfException e) {
                JOptionPane.showMessageDialog(null, "Ett fel inträffade!");
            }
        }
    }//GEN-LAST:event_buttonLoginActionPerformed

    //Metod som andra klasser kan använda för att hitta "ID" på inloggad användare.
    public static String getId() {
        return id;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSkapaKonto;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JPasswordField textFieldPassword;
    private javax.swing.JTextField textFieldUsername;
    // End of variables declaration//GEN-END:variables
}
